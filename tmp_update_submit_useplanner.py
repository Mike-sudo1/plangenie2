from pathlib import Path
text = Path(r"src/hooks/usePlanner.ts").read_text()
old = "      const trimmedCity = form.city.trim();\r\n      const geocoded = await geocodeCity(trimmedCity);\r\n      const preferences = form.preferences;\r\n      const budgetUsd = form.budgetUsd;\r\n      const startIso = formatISO(form.startDate, { representation: 'date' });\r\n      const endIso = formatISO(form.endDate, { representation: 'date' });\r\n      const dayCount = differenceInCalendarDays(form.endDate, form.startDate) + 1;\r\n\r\n      const places = await fetchPreferencePlaces(geocoded.city, preferences, geocoded);\r\n      const weatherByDay = await fetchWeatherForecastRange(\r\n        geocoded.latitude,\r\n        geocoded.longitude,\r\n        form.startDate,\r\n        form.endDate\r\n      );\r\n\r\n      const defaultTripName = `${geocoded.city} Escape`;\r\n\r\n      const generated = await requestMultiDayItinerary({\r\n        tripName: defaultTripName,\r\n        city: geocoded.city,\r\n        startDate: startIso,\r\n        endDate: endIso,\r\n        dayCount,\r\n        preferences,\r\n        budgetUsd,\r\n        places,\r\n        weatherByDay\r\n      });\r\n\r\n      generated.trip_name = defaultTripName;\r\n      generated.currency = 'USD';\r\n      generated.conversion_rate = 1;\r\n      generated.base_currency = 'USD';\r\n"
if old not in text:
    raise SystemExit('old block not found in submit')
new = "      const trimmedCity = form.city.trim();\n      const geocoded = await geocodeCity(trimmedCity);\n      const preferences = form.preferences;\n      const budgetUsd = form.budgetUsd;\n      const isDayPlan = form.isDayPlan;\n      const startDate = form.startDate;\n      const endDate = isDayPlan ? form.startDate : form.endDate;\n      const startIso = formatISO(startDate, { representation: 'date' });\n      const endIso = formatISO(endDate, { representation: 'date' });\n      const dayCount = differenceInCalendarDays(endDate, startDate) + 1;\n\n      const places = await fetchPreferencePlaces(geocoded.city, preferences, geocoded);\n      const weatherByDay = await fetchWeatherForecastRange(\n        geocoded.latitude,\n        geocoded.longitude,\n        startDate,\n        endDate\n      );\n\n      const defaultTripName = `${geocoded.city} Escape`;\n\n      const generated = await requestMultiDayItinerary({\n        tripName: defaultTripName,\n        city: geocoded.city,\n        startDate: startIso,\n        endDate: endIso,\n        dayCount,\n        preferences,\n        budgetUsd,\n        places,\n        weatherByDay,\n        isDayPlan,\n      });\n\n      generated.trip_name = defaultTripName;\n      generated.currency = 'USD';\n      generated.conversion_rate = 1;\n      generated.base_currency = 'USD';\n      generated.isDayPlan = isDayPlan;\n"
text = text.replace(old, new)
Path(r"src/hooks/usePlanner.ts").write_text(text)
