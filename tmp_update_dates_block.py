from pathlib import Path
path = Path(r"src/screens/PlannerScreen.tsx")
text = path.read_text()
old_block = "        <View style={styles.datesRow}>\r\n          <TouchableOpacity\r\n            style={styles.dateColumn}\r\n            onPress={() => setShowStartPicker(true)}\r\n          >\r\n            <TextInput\r\n              label=\"Arrive\"\r\n              value={formattedStart}\r\n              editable={false}\r\n              pointerEvents=\"none\"\r\n              mode=\"outlined\"\r\n              right={<TextInput.Icon icon=\"calendar\" />}\r\n            />\r\n          </TouchableOpacity>\r\n          <TouchableOpacity\r\n            style={styles.dateColumn}\r\n            onPress={() => setShowEndPicker(true)}\r\n          >\r\n            <TextInput\r\n              label=\"Depart\"\r\n              value={formattedEnd}\r\n              editable={false}\r\n              pointerEvents=\"none\"\r\n              mode=\"outlined\"\r\n              right={<TextInput.Icon icon=\"calendar\" />}\r\n            />\r\n          </TouchableOpacity>\r\n        </View>\r\n"
if old_block not in text:
    raise SystemExit('old dates block not found')
new_block = "        <View style={styles.dayPlanToggleRow}>\n          <Text variant=\"bodyMedium\" style={styles.dayPlanToggleLabel}>\n            Plan just one day?\n          </Text>\n          <Switch value={form.isDayPlan} onValueChange={handleToggleDayPlan} />\n        </View>\n\n        <View style={styles.datesRow}>\n          <TouchableOpacity style={styles.dateColumn} onPress={() => setShowStartPicker(true)}>\n            <TextInput\n              label=\"Arrive\"\n              value={formattedStart}\n              editable={false}\n              pointerEvents=\"none\"\n              mode=\"outlined\"\n              right={<TextInput.Icon icon=\"calendar\" />}\n            />\n          </TouchableOpacity>\n          {!form.isDayPlan ? (\n            <TouchableOpacity style={styles.dateColumn} onPress={() => setShowEndPicker(true)}>\n              <TextInput\n                label=\"Depart\"\n                value={formattedEnd}\n                editable={false}\n                pointerEvents=\"none\"\n                mode=\"outlined\"\n                right={<TextInput.Icon icon=\"calendar\" />}\n              />\n            </TouchableOpacity>\n          ) : null}\n        </View>\n"
path.write_text(text.replace(old_block, new_block))
