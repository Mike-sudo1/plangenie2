from pathlib import Path
text = Path(r"src/lib/api.ts").read_text()
text = text.replace("export const requestMultiDayItinerary = async (input: {\r\n  tripName: string;\r\n  city: string;\r\n  startDate: string;\r\n  endDate: string;\r\n  dayCount: number;\r\n  preferences: PreferenceOption[];\r\n  budgetUsd?: number;\r\n  places: PlaceCandidate[];\r\n  weatherByDay: WeatherDaySummary[];\r\n}): Promise<TripItinerary> => {","export const requestMultiDayItinerary = async (input: {\n  tripName: string;\n  city: string;\n  startDate: string;\n  endDate: string;\n  dayCount: number;\n  preferences: PreferenceOption[];\n  budgetUsd?: number;\n  places: PlaceCandidate[];\n  weatherByDay: WeatherDaySummary[];\n  isDayPlan: boolean;\n}): Promise<TripItinerary> => {")
text = text.replace("    budgetUsd,\r\n    places,\r\n    weatherByDay,\r\n  } = input;","    budgetUsd,\n    places,\n    weatherByDay,\n    isDayPlan,\n  } = input;")
text = text.replace("const prompt = `Plan a ${dayCount}-day itinerary called \"${tripName}\" for a traveler in ${city} from ${startDate} to ${endDate}. Budget: ${\r\n    budgetUsd != null ? `$${budgetUsd.toFixed(0)} per day goal` : 'flexible'\r\n  }.\r\nPreferences: ${preferences.length > 0 ? preferences.join(', ') : 'general sightseeing'}.\r\nWeather outlook: ${weatherSummary || 'General clear skies'}.\r\n","const planDescriptor = isDayPlan ? 'single-day' : `${dayCount}-day`;\nconst prompt = `Plan a ${planDescriptor} itinerary called \"${tripName}\" for a traveler in ${city} from ${startDate} to ${endDate}. Budget: ${\n    budgetUsd != null ? `$${budgetUsd.toFixed(0)} per day goal` : 'flexible'\n  }.\nThis request is${isDayPlan ? '' : ' not'} for a day-only plan (isDayPlan=${isDayPlan}).\nPreferences: ${preferences.length > 0 ? preferences.join(', ') : 'general sightseeing'}.\nWeather outlook: ${weatherSummary || 'General clear skies'}.\n")
text = text.replace("  const totalCost = normalisedDays.reduce((total, day) => total + day.summary.estimatedSpend, 0);\r\n\r\n  const itinerary: TripItinerary = {\r\n    trip_name: parsed.trip_name ?? tripName,\r\n    destination: parsed.destination ?? city,\r\n    start_date: parsed.start_date ?? startDate,\r\n    end_date: parsed.end_date ?? endDate,\r\n    budget_usd: parsed.budget_usd ?? budgetUsd,\r\n    total_estimated_cost: parsed.total_estimated_cost ?? totalCost,\r\n    highlights: Array.isArray(parsed.highlights) ? parsed.highlights : [],\r\n    weatherSummary: parsed.weatherSummary ?? weatherSummary,\r\n    days: normalisedDays\r\n  };","  const totalCost = normalisedDays.reduce((total, day) => total + day.summary.estimatedSpend, 0);\n\n  const itinerary: TripItinerary = {\n    trip_name: parsed.trip_name ?? tripName,\n    destination: parsed.destination ?? city,\n    start_date: parsed.start_date ?? startDate,\n    end_date: parsed.end_date ?? endDate,\n    budget_usd: parsed.budget_usd ?? budgetUsd,\n    total_estimated_cost: parsed.total_estimated_cost ?? totalCost,\n    highlights: Array.isArray(parsed.highlights) ? parsed.highlights : [],\n    weatherSummary: parsed.weatherSummary ?? weatherSummary,\n    days: normalisedDays,\n    isDayPlan,\n  };")
Path(r"src/lib/api.ts").write_text(text)
